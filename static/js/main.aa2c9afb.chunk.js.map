{"version":3,"sources":["Asset/forest.jpg","Asset/nixsv.png","Asset/forest3.jpg","Asset/me2.jpg","Home.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Image","src","forest","Container","me","roundedCircle","align","height","Carousel","Item","nixsv","alt","rounded","Caption","forest3","style","fontSize","icon","faVk","fixedWidth","size","faAt","faHome","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","loading","Promise","resolve","setTimeout","setState","this","React","Component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aa2c9afb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forest.7ebb11db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nixsv.0b26ae58.png\";","module.exports = __webpack_public_path__ + \"static/media/forest3.33631a74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me2.044e843d.jpg\";","import React from 'react';\nimport { Container, Navbar, Nav, Carousel, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faAt, faHome} from '@fortawesome/free-solid-svg-icons';\nimport { faVk } from '@fortawesome/free-brands-svg-icons'\nimport forest from './Asset/forest.jpg';\nimport nixsv from './Asset/nixsv.png';\nimport forest3 from './Asset/forest3.jpg';\nimport me from './Asset/me2.jpg';\n\nfunction Home() {\n\n    return (\n    <>\n      <header className=\"fixed-top\">\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n              <Navbar.Brand href=\"#home\">Личный сайт</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                      <Nav.Link href=\"#home\">Домой</Nav.Link>\n                      <Nav.Link href=\"#link\">О себе</Nav.Link>\n                      <Nav.Link href=\"#examples\">Примеры работ</Nav.Link>\n                      <Nav.Link href=\"#contacts\">Контакты</Nav.Link>\n                  </Nav>\n              </Navbar.Collapse>\n          </Navbar>\n      </header>\n        <main>\n            <div id=\"home\" className=\"m-0 row align-items-center vh-100\">\n                <Image className=\"frst\"\n                src={forest}\n                />\n                <h1 className=\"display-2 col text-center greet\">Добро пожаловать <span className=\"h6 text-black-50\">нахуй</span></h1>\n            </div>\n            <div id=\"link\" className=\"text-light bg-dark\">\n                <Container className=\"pt-5 pb-5\">\n                    <h2 className=\"pt-4 pb-4 text-center\">О себе</h2>\n                            <Image\n                                className=\"myimg\"\n                            src={me}\n                            roundedCircle\n                            align=\"middle\"\n                            height={250}\n                        />\n                            <p className=\"bio-text ml-4 d-inline-block align-middle\">\n                                Привет, меня зовут Денис. <br/>\n                                Я увлекаюсь и занимаюсь программированием и отчасти сисадминством. <br/>\n                                Умею собирать ПК и писать простенькие сайты. <br/>\n                                Этот сайт, например, написан на ReactJS лично мной. <br/>\n                                Знаю Git, малость PHP на пару с JS и его библиотека ReactJS, конечно же HTML/CSS. <br/>\n                            </p>\n                </Container>\n            </div>\n            <div id=\"examples\" className=\"text-light bg-dark\">\n                <div className=\"w-75 m-auto pt-5 pb-5\">\n                    <h2 className=\"text-center pt-2 pb-2\">Примеры работ</h2>\n                    <Carousel>\n                        <Carousel.Item>\n                            <Image\n                                className=\"d-block w-100\"\n                                src={nixsv}\n                                alt=\"First slide\"\n                                rounded\n                            />\n                            <Carousel.Caption>\n                                <h3><a href=\"https://wanetol72.github.io/nixsvru/\">nixsv.ru</a></h3>\n                                <p>Сайт игрового проекта</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <Image\n                                className=\"d-block w-100\"\n                                src={forest3}\n                                alt=\"Third slide\"\n                                rounded\n                            />\n                            <Carousel.Caption>\n                                <h3>Third slide label</h3>\n                                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n                </div>\n            </div>\n            <div id=\"contacts\" className=\"text-light bg-dark \">\n                <Container className=\"pt-5 pb-5\">\n                    <h3 className=\"text-center pt-2 pb-2\">Контакты</h3>\n                    <div style={{fontSize: '1rem'}}>\n                        <FontAwesomeIcon id=\"\" className=\"hover align-middle\" icon={faVk} fixedWidth size=\"lg\" /> <p className=\"d-inline-block align-super mb-1\"><a href=\"https://vk.com/panzerkampfwagen6tiger\">Денис Купцов</a></p>\n                        <br/>\n                        <FontAwesomeIcon id=\"\" className=\"hover align-middle\" icon={faAt} fixedWidth size=\"lg\" /> <p className=\"d-inline-block align-super mb-1\">wanetols@gmail.com</p>\n                        <br/>\n                        <FontAwesomeIcon id=\"\" className=\"hover align-middle\" icon={faHome} fixedWidth size=\"lg\" /> <p className=\"d-inline-block align-super mb-1\">Г. Москва</p>\n                    </div>\n                </Container>\n            </div>\n        </main>\n      <footer className=\"bg-dark pt-1 pb-1\">\n        <p className=\"text-center text-light\">by wanetol72</p>\n      </footer>\n    </>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends React.Component {\n    state = {\n        loading: true\n    };\n\n    componentDidMount() {\n        // this simulates an async action, after which the component will render the content\n        demoAsyncCall().then(() => this.setState({ loading: false }));\n    }\n\n    render() {\n\n        const { loading } = this.state;\n\n        if(loading) { // if your component doesn't have to wait for an async action, remove this block\n            return (\n                <>\n                    <div className=\"bg-dark vw-100 vh-100\">\n                            <div className=\"load-wrp\">\n                                <div className=\"load\"></div>\n                                <h1 className=\"loader-text\">Загрузка...</h1>\n                            </div>\n\n                    </div>\n                </>\n            ); // render null when app is not ready\n        }\n\n        return (\n                <Home />\n        );\n    }\n}\n\nfunction demoAsyncCall() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 1000));\n}\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}